// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: state.proto

package protos

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type State_Cullface int32

const (
	State_CULL_BACK  State_Cullface = 0
	State_CULL_FRONT State_Cullface = 1
	State_CULL_BOTH  State_Cullface = 2
)

// Enum value maps for State_Cullface.
var (
	State_Cullface_name = map[int32]string{
		0: "CULL_BACK",
		1: "CULL_FRONT",
		2: "CULL_BOTH",
	}
	State_Cullface_value = map[string]int32{
		"CULL_BACK":  0,
		"CULL_FRONT": 1,
		"CULL_BOTH":  2,
	}
)

func (x State_Cullface) Enum() *State_Cullface {
	p := new(State_Cullface)
	*p = x
	return p
}

func (x State_Cullface) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (State_Cullface) Descriptor() protoreflect.EnumDescriptor {
	return file_state_proto_enumTypes[0].Descriptor()
}

func (State_Cullface) Type() protoreflect.EnumType {
	return &file_state_proto_enumTypes[0]
}

func (x State_Cullface) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use State_Cullface.Descriptor instead.
func (State_Cullface) EnumDescriptor() ([]byte, []int) {
	return file_state_proto_rawDescGZIP(), []int{0, 0}
}

type State_BlendMode int32

const (
	State_BLEND_SRC_ALPHA           State_BlendMode = 0
	State_BLEND_ONE_MINUS_SRC_ALPHA State_BlendMode = 1
	State_BLEND_ONE                 State_BlendMode = 2
)

// Enum value maps for State_BlendMode.
var (
	State_BlendMode_name = map[int32]string{
		0: "BLEND_SRC_ALPHA",
		1: "BLEND_ONE_MINUS_SRC_ALPHA",
		2: "BLEND_ONE",
	}
	State_BlendMode_value = map[string]int32{
		"BLEND_SRC_ALPHA":           0,
		"BLEND_ONE_MINUS_SRC_ALPHA": 1,
		"BLEND_ONE":                 2,
	}
)

func (x State_BlendMode) Enum() *State_BlendMode {
	p := new(State_BlendMode)
	*p = x
	return p
}

func (x State_BlendMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (State_BlendMode) Descriptor() protoreflect.EnumDescriptor {
	return file_state_proto_enumTypes[1].Descriptor()
}

func (State_BlendMode) Type() protoreflect.EnumType {
	return &file_state_proto_enumTypes[1]
}

func (x State_BlendMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use State_BlendMode.Descriptor instead.
func (State_BlendMode) EnumDescriptor() ([]byte, []int) {
	return file_state_proto_rawDescGZIP(), []int{0, 1}
}

type State_BlendEquation int32

const (
	State_BLEND_FUNC_ADD State_BlendEquation = 0
	State_BLEND_FUNC_MAX State_BlendEquation = 1
)

// Enum value maps for State_BlendEquation.
var (
	State_BlendEquation_name = map[int32]string{
		0: "BLEND_FUNC_ADD",
		1: "BLEND_FUNC_MAX",
	}
	State_BlendEquation_value = map[string]int32{
		"BLEND_FUNC_ADD": 0,
		"BLEND_FUNC_MAX": 1,
	}
)

func (x State_BlendEquation) Enum() *State_BlendEquation {
	p := new(State_BlendEquation)
	*p = x
	return p
}

func (x State_BlendEquation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (State_BlendEquation) Descriptor() protoreflect.EnumDescriptor {
	return file_state_proto_enumTypes[2].Descriptor()
}

func (State_BlendEquation) Type() protoreflect.EnumType {
	return &file_state_proto_enumTypes[2]
}

func (x State_BlendEquation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use State_BlendEquation.Descriptor instead.
func (State_BlendEquation) EnumDescriptor() ([]byte, []int) {
	return file_state_proto_rawDescGZIP(), []int{0, 2}
}

type State_DepthFunc int32

const (
	State_DEPTH_LESS_EQUAL State_DepthFunc = 0
	State_DEPTH_LESS       State_DepthFunc = 1
	State_DEPTH_EQUAL      State_DepthFunc = 2
)

// Enum value maps for State_DepthFunc.
var (
	State_DepthFunc_name = map[int32]string{
		0: "DEPTH_LESS_EQUAL",
		1: "DEPTH_LESS",
		2: "DEPTH_EQUAL",
	}
	State_DepthFunc_value = map[string]int32{
		"DEPTH_LESS_EQUAL": 0,
		"DEPTH_LESS":       1,
		"DEPTH_EQUAL":      2,
	}
)

func (x State_DepthFunc) Enum() *State_DepthFunc {
	p := new(State_DepthFunc)
	*p = x
	return p
}

func (x State_DepthFunc) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (State_DepthFunc) Descriptor() protoreflect.EnumDescriptor {
	return file_state_proto_enumTypes[3].Descriptor()
}

func (State_DepthFunc) Type() protoreflect.EnumType {
	return &file_state_proto_enumTypes[3]
}

func (x State_DepthFunc) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use State_DepthFunc.Descriptor instead.
func (State_DepthFunc) EnumDescriptor() ([]byte, []int) {
	return file_state_proto_rawDescGZIP(), []int{0, 3}
}

type State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ProgramName   string              `protobuf:"bytes,2,opt,name=programName,proto3" json:"programName,omitempty"`
	Culling       bool                `protobuf:"varint,3,opt,name=culling,proto3" json:"culling,omitempty"`
	CullFace      State_Cullface      `protobuf:"varint,4,opt,name=cullFace,proto3,enum=protos.State_Cullface" json:"cullFace,omitempty"`
	Blending      bool                `protobuf:"varint,5,opt,name=blending,proto3" json:"blending,omitempty"`
	BlendSrcMode  State_BlendMode     `protobuf:"varint,6,opt,name=blend_src_mode,json=blendSrcMode,proto3,enum=protos.State_BlendMode" json:"blend_src_mode,omitempty"`
	BlendDstMode  State_BlendMode     `protobuf:"varint,7,opt,name=blend_dst_mode,json=blendDstMode,proto3,enum=protos.State_BlendMode" json:"blend_dst_mode,omitempty"`
	BlendEquation State_BlendEquation `protobuf:"varint,8,opt,name=blend_equation,json=blendEquation,proto3,enum=protos.State_BlendEquation" json:"blend_equation,omitempty"`
	DepthTest     bool                `protobuf:"varint,9,opt,name=depth_test,json=depthTest,proto3" json:"depth_test,omitempty"`
	DepthWrite    bool                `protobuf:"varint,10,opt,name=depth_write,json=depthWrite,proto3" json:"depth_write,omitempty"`
	DepthFunc     State_DepthFunc     `protobuf:"varint,11,opt,name=depth_func,json=depthFunc,proto3,enum=protos.State_DepthFunc" json:"depth_func,omitempty"`
	ColorWrite    bool                `protobuf:"varint,12,opt,name=color_write,json=colorWrite,proto3" json:"color_write,omitempty"`
	ScissorTest   bool                `protobuf:"varint,13,opt,name=scissor_test,json=scissorTest,proto3" json:"scissor_test,omitempty"`
}

func (x *State) Reset() {
	*x = State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State) ProtoMessage() {}

func (x *State) ProtoReflect() protoreflect.Message {
	mi := &file_state_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State.ProtoReflect.Descriptor instead.
func (*State) Descriptor() ([]byte, []int) {
	return file_state_proto_rawDescGZIP(), []int{0}
}

func (x *State) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *State) GetProgramName() string {
	if x != nil {
		return x.ProgramName
	}
	return ""
}

func (x *State) GetCulling() bool {
	if x != nil {
		return x.Culling
	}
	return false
}

func (x *State) GetCullFace() State_Cullface {
	if x != nil {
		return x.CullFace
	}
	return State_CULL_BACK
}

func (x *State) GetBlending() bool {
	if x != nil {
		return x.Blending
	}
	return false
}

func (x *State) GetBlendSrcMode() State_BlendMode {
	if x != nil {
		return x.BlendSrcMode
	}
	return State_BLEND_SRC_ALPHA
}

func (x *State) GetBlendDstMode() State_BlendMode {
	if x != nil {
		return x.BlendDstMode
	}
	return State_BLEND_SRC_ALPHA
}

func (x *State) GetBlendEquation() State_BlendEquation {
	if x != nil {
		return x.BlendEquation
	}
	return State_BLEND_FUNC_ADD
}

func (x *State) GetDepthTest() bool {
	if x != nil {
		return x.DepthTest
	}
	return false
}

func (x *State) GetDepthWrite() bool {
	if x != nil {
		return x.DepthWrite
	}
	return false
}

func (x *State) GetDepthFunc() State_DepthFunc {
	if x != nil {
		return x.DepthFunc
	}
	return State_DEPTH_LESS_EQUAL
}

func (x *State) GetColorWrite() bool {
	if x != nil {
		return x.ColorWrite
	}
	return false
}

func (x *State) GetScissorTest() bool {
	if x != nil {
		return x.ScissorTest
	}
	return false
}

var File_state_proto protoreflect.FileDescriptor

var file_state_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x22, 0xac, 0x06, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x75, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12,
	0x32, 0x0a, 0x08, 0x63, 0x75, 0x6c, 0x6c, 0x46, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x43, 0x75, 0x6c, 0x6c, 0x66, 0x61, 0x63, 0x65, 0x52, 0x08, 0x63, 0x75, 0x6c, 0x6c, 0x46,
	0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12,
	0x3d, 0x0a, 0x0e, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x72, 0x63, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x0c, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x53, 0x72, 0x63, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x3d,
	0x0a, 0x0e, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x52,
	0x0c, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x44, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x42, 0x0a,
	0x0e, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x45, 0x71, 0x75, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0d, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x45, 0x71, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x74, 0x68, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x65, 0x70, 0x74, 0x68, 0x54, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x74, 0x68, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x74, 0x68, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x12, 0x36, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x74, 0x68, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x46, 0x75, 0x6e, 0x63, 0x52, 0x09,
	0x64, 0x65, 0x70, 0x74, 0x68, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x63,
	0x69, 0x73, 0x73, 0x6f, 0x72, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x73, 0x63, 0x69, 0x73, 0x73, 0x6f, 0x72, 0x54, 0x65, 0x73, 0x74, 0x22, 0x38, 0x0a,
	0x08, 0x43, 0x75, 0x6c, 0x6c, 0x66, 0x61, 0x63, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x55, 0x4c,
	0x4c, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x55, 0x4c, 0x4c,
	0x5f, 0x46, 0x52, 0x4f, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x55, 0x4c, 0x4c,
	0x5f, 0x42, 0x4f, 0x54, 0x48, 0x10, 0x02, 0x22, 0x4e, 0x0a, 0x09, 0x42, 0x6c, 0x65, 0x6e, 0x64,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x4c, 0x45, 0x4e, 0x44, 0x5f, 0x53, 0x52,
	0x43, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x42, 0x4c, 0x45,
	0x4e, 0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x55, 0x53, 0x5f, 0x53, 0x52, 0x43,
	0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x4c, 0x45, 0x4e,
	0x44, 0x5f, 0x4f, 0x4e, 0x45, 0x10, 0x02, 0x22, 0x37, 0x0a, 0x0d, 0x42, 0x6c, 0x65, 0x6e, 0x64,
	0x45, 0x71, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x4c, 0x45, 0x4e,
	0x44, 0x5f, 0x46, 0x55, 0x4e, 0x43, 0x5f, 0x41, 0x44, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x42, 0x4c, 0x45, 0x4e, 0x44, 0x5f, 0x46, 0x55, 0x4e, 0x43, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x01,
	0x22, 0x42, 0x0a, 0x09, 0x44, 0x65, 0x70, 0x74, 0x68, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x14, 0x0a,
	0x10, 0x44, 0x45, 0x50, 0x54, 0x48, 0x5f, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x45, 0x51, 0x55, 0x41,
	0x4c, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x45, 0x50, 0x54, 0x48, 0x5f, 0x4c, 0x45, 0x53,
	0x53, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x45, 0x50, 0x54, 0x48, 0x5f, 0x45, 0x51, 0x55,
	0x41, 0x4c, 0x10, 0x02, 0x42, 0x21, 0x5a, 0x1f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x66, 0x63, 0x76, 0x61, 0x72, 0x65, 0x6c, 0x61, 0x2f, 0x67, 0x6f, 0x73, 0x67,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_state_proto_rawDescOnce sync.Once
	file_state_proto_rawDescData = file_state_proto_rawDesc
)

func file_state_proto_rawDescGZIP() []byte {
	file_state_proto_rawDescOnce.Do(func() {
		file_state_proto_rawDescData = protoimpl.X.CompressGZIP(file_state_proto_rawDescData)
	})
	return file_state_proto_rawDescData
}

var file_state_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_state_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_state_proto_goTypes = []interface{}{
	(State_Cullface)(0),      // 0: protos.State.Cullface
	(State_BlendMode)(0),     // 1: protos.State.BlendMode
	(State_BlendEquation)(0), // 2: protos.State.BlendEquation
	(State_DepthFunc)(0),     // 3: protos.State.DepthFunc
	(*State)(nil),            // 4: protos.State
}
var file_state_proto_depIdxs = []int32{
	0, // 0: protos.State.cullFace:type_name -> protos.State.Cullface
	1, // 1: protos.State.blend_src_mode:type_name -> protos.State.BlendMode
	1, // 2: protos.State.blend_dst_mode:type_name -> protos.State.BlendMode
	2, // 3: protos.State.blend_equation:type_name -> protos.State.BlendEquation
	3, // 4: protos.State.depth_func:type_name -> protos.State.DepthFunc
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_state_proto_init() }
func file_state_proto_init() {
	if File_state_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_state_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_state_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_state_proto_goTypes,
		DependencyIndexes: file_state_proto_depIdxs,
		EnumInfos:         file_state_proto_enumTypes,
		MessageInfos:      file_state_proto_msgTypes,
	}.Build()
	File_state_proto = out.File
	file_state_proto_rawDesc = nil
	file_state_proto_goTypes = nil
	file_state_proto_depIdxs = nil
}
